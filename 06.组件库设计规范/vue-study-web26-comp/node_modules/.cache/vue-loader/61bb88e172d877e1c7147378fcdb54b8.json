{"remainingRequest":"/Users/linhao/Desktop/vue/practice-vue/06.组件库设计规范/vue-study-web26-comp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/linhao/Desktop/vue/practice-vue/06.组件库设计规范/vue-study-web26-comp/src/components/ElForm/ElFormItem.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/linhao/Desktop/vue/practice-vue/06.组件库设计规范/vue-study-web26-comp/src/components/ElForm/ElFormItem.vue","mtime":1610770936803},{"path":"/Users/linhao/Desktop/vue/practice-vue/06.组件库设计规范/vue-study-web26-comp/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/linhao/Desktop/vue/practice-vue/06.组件库设计规范/vue-study-web26-comp/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/linhao/Desktop/vue/practice-vue/06.组件库设计规范/vue-study-web26-comp/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/linhao/Desktop/vue/practice-vue/06.组件库设计规范/vue-study-web26-comp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/linhao/Desktop/vue/practice-vue/06.组件库设计规范/vue-study-web26-comp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmVsLWZvcm0taXRlbSB7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogcm93Owp9Ci5lcnJvciB7CiAgY29sb3I6IHJlZDsKfQo="},{"version":3,"sources":["ElFormItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ElFormItem.vue","sourceRoot":"src/components/ElForm","sourcesContent":["<template>\n  <div class=\"el-form-item\">\n    <label v-if=\"label\">{{ label }}</label>\n    <slot></slot>\n    <span class=\"error\" v-if=\"error\">{{ error }}</span>\n  </div>\n</template>\n\n<script>\nimport Validator from \"async-validator\";\nexport default {\n  inject: [\"form\", \"rules\"],\n  name: \"el-form-item\",\n  props: {\n    label: {\n      type: String,\n      default: \"\",\n    },\n    prop: {\n      type: String,\n      default: \"\",\n    },\n  },\n  data() {\n    return {\n      error: \"\",\n    };\n  },\n  methods: {\n    validate() {\n      // 校验规则\n      const rule = this.rules[this.prop];\n\n      // 输入值\n      const value = this.form[this.prop];\n\n      const validator = new Validator({ [this.prop]: rule });\n\n      // 执行校验\n      return validator.validate({ [this.prop]: value }, (error) => {\n        if (error) {\n          // 显示错误信息\n          this.error = error[0].message;\n        } else {\n          // 校验通过清除错误\n          this.error = \"\";\n        }\n      });\n    },\n  },\n};\n</script>\n\n<style>\n.el-form-item {\n  display: flex;\n  flex-direction: row;\n}\n.error {\n  color: red;\n}\n</style>"]}]}